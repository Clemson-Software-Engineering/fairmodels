% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ceteris_paribus_cutoff.R
\name{ceteris_paribus_cutoff}
\alias{ceteris_paribus_cutoff}
\title{Ceteris paribus cutoff}
\usage{
ceteris_paribus_cutoff(
  x,
  subgroup,
  new_cutoffs = NULL,
  fairness_metrics = unique_metrics(),
  grid_points = 101,
  cummulated = FALSE
)
}
\arguments{
\item{x}{fairness_object}

\item{subgroup}{character, name of subgroup (level in group)}

\item{new_cutoffs}{numeric, vector of new cutoffs, length should be equal to number of group levels.
Position corresponding to subgroups in levels will be changed. Deafult NULL}

\item{fairness_metrics}{character, name of metric or vector of multiple metrics}

\item{grid_points}{numeric, grid for cutoffs to test. Number of points between 0 and 1 spread evenly.}

\item{cummulated}{logical, if true facets will collapse to one plot and parity loss for each model will be summed. Deafult FALSE.}
}
\value{

}
\description{
Ceteris paribus cutoff is way to check how will parity loss behave if we changed only cutoff in one subgroup.
By using parameter new_cutoffs parity loss for metric's with new cutoffs will be calculated. Note that cutoff for subgroup will
change no metter if in new_cutoff is some value. When parameter cummulated is set to true, all metrics will be summed and facets will
collapse to one plot with different models on it. Sometimes due to NA's present in some metrics it is needed to drop some metrics.
}
\examples{

library(DALEX)
library(ranger)

data("compas")

rf_compas  <- ranger(Two_yr_Recidivism ~., data = compas, probability = TRUE)
glm_compas <- glm(Two_yr_Recidivism~., data=compas, family=binomial(link="logit"))

y_numeric <- as.numeric(compas$Two_yr_Recidivism)-1

explainer_rf  <- explain(rf_compas, data = compas, y = y_numeric)
explainer_glm <- explain(glm_compas, data = compas, y = y_numeric)

fobject <-create_fairness_object(explainer_glm, explainer_rf,
                                 outcome = "Two_yr_Recidivism",
                                 group = "Ethnicity",
                                 base = "Caucasian",
                                 cutoff = 0.5)

cpc <- ceteris_paribus_cutoff(fobject, subgroup = "African_American")
plot(cpc)


cpc <- ceteris_paribus_cutoff(fobject, subgroup = "African_American",
                              cummulated = TRUE,
                              fairness_metrics = c("TPR_parity_loss","PPV_parity_loss", "TNR_parity_loss" ))
plot(cpc)

}
